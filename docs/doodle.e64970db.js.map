{"version":3,"sources":["code-doodle-1/doodle/index.js"],"names":["canvas","document","getElementById","height","window","innerHeight","width","innerWidth","ctx","getContext","animate","stop","start","spacing","numOfLines","startOffset","quarter","lineWidth","isInViewport","elem","bounding","getBoundingClientRect","bottom","documentElement","clientHeight","top","line","diff","n","hue","Math","random","p","y","yDiv","firstYShift","sin","PI","secondYShift","thirdYShift","firstXShift","secondXShift","thirdXShift","strokeStyle","beginPath","moveTo","lineTo","stroke","counter","hue1","hue2","requestAnimationFrame","step","clearRect","addEventListener"],"mappings":";AAAA,IAAIA,EAASC,SAASC,eAAe,UACrCF,EAAOG,OAASC,OAAOC,YACvBL,EAAOM,MAAQF,OAAOG,WACtB,IAAIC,EAAMR,EAAOS,WAAW,MAExBC,EAAU,KAEd,SAASC,IACPD,GAAU,EAGZ,SAASE,IACPF,GAAU,EAENG,IAAAA,EAAU,GACVC,EAAad,EAAOG,OAASU,EAE7BE,EAAcF,EAAU,EACxBG,GAAWhB,EAAOM,MAAQO,GAAW,EAEzCL,EAAIS,UAAY,GAEZC,IAAAA,EAAe,SAAsBC,GACnCC,IAAAA,EAAWD,EAAKE,wBAEbD,OAAAA,EAASE,QAAU,GAAKF,EAASE,SAAWlB,OAAOC,aAAeJ,SAASsB,gBAAgBC,eAAiBJ,EAASK,KAAO,GAAKL,EAASK,MAAQrB,OAAOC,aAAeJ,SAASsB,gBAAgBC,eAGjME,SAAAA,EAAKC,EAAMC,EAAGC,GAEbC,KAAKC,SAER,IAFDC,IAEKC,EAAI,EAAGA,EAAInB,EAAYmB,IAAK,CAG/BC,IAAAA,EAAOD,EAAInB,EAKXqB,EAAcL,KAAKM,IAAIF,EAAOJ,KAAKO,GAAK,IAA+B,GAAzBP,KAAKM,IAAIT,EAAOC,EAAI,IAClEU,EAAeR,KAAKM,IAAIF,EAAOJ,KAAKO,GAAK,IAA+B,GAAzBP,KAAKM,IAAIT,EAAOC,EAAI,IACnEW,EAAcT,KAAKM,IAAIF,EAAOJ,KAAKO,GAAK,IAA+B,GAAzBP,KAAKM,IAAIT,EAAOC,EAAI,IAClEY,EAAcV,KAAKM,IAAIF,EAAOJ,KAAKO,GAAK,IAA+B,GAAzBP,KAAKM,IAAIT,EAAOC,EAAI,IAClEa,EAAeX,KAAKM,IAAIF,EAAOJ,KAAKO,GAAK,IAAgC,GAA1BP,KAAKM,IAAIT,EAAOC,EAAI,KACnEc,EAAcZ,KAAKM,IAAIF,EAAOJ,KAAKO,KAAiC,IAA1BP,KAAKM,IAAIT,EAAOC,EAAI,KAElEpB,EAAImC,YAAc,QAAUd,EAAM,oBAClCrB,EAAIoC,YACJpC,EAAIqC,OAAO9B,EAAakB,EAAIpB,EAAUE,GACtCP,EAAIsC,OAAO/B,EAAcC,EAAUwB,EAAaP,EAAIpB,EAAUE,EAAcoB,GAC5E3B,EAAIsC,OAAO/B,EAAwB,EAAVC,EAAcyB,EAAcR,EAAIpB,EAAUE,EAAcuB,GACjF9B,EAAIsC,OAAO/B,EAAwB,EAAVC,EAAc0B,EAAaT,EAAIpB,EAAUE,EAAcwB,GAChF/B,EAAIsC,OAAO9C,EAAOM,MAAQS,EAAakB,EAAIpB,EAAUE,GACrDP,EAAIuC,UAIJC,IAAAA,EAAU,EACVC,EAAO,EACPC,EAAO,EAmBX9C,OAAO+C,sBAjBEC,SAAAA,IACF1C,GACAQ,EAAalB,KAClBQ,EAAI6C,UAAU,EAAG,EAAGrD,EAAOM,MAAON,EAAOG,QAIzCuB,IAFAsB,EAEc,KAAOC,GAErBvB,EAAe,EAAVsB,EAAa,KAAQE,GAE1BD,GAAQ,EACRC,GAAQ,GAER9C,OAAO+C,sBAAsBC,MAMjChD,OAAOkD,iBAAiB,SAAU,WAChCtD,EAAOM,MAAQF,OAAOG,WACtBP,EAAOG,OAASC,OAAOC,YACvBM,IACAC,MAGFA","file":"doodle.e64970db.js","sourceRoot":"..","sourcesContent":["var canvas = document.getElementById('canvas');\ncanvas.height = window.innerHeight;\ncanvas.width = window.innerWidth;\nvar ctx = canvas.getContext('2d');\n\nvar animate = null;\n\nfunction stop() {\n  animate = false;\n}\n\nfunction start() {\n  animate = true;\n\n  var spacing = 20;\n  var numOfLines = canvas.height / spacing;\n\n  var startOffset = spacing / 2;\n  var quarter = (canvas.width - spacing) / 4;\n\n  ctx.lineWidth = 10;\n\n  var isInViewport = function isInViewport(elem) {\n    var bounding = elem.getBoundingClientRect();\n    //  If the bottom is in view but the top isn't then it's visible\n    return bounding.bottom >= 0 && bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) || bounding.top >= 0 && bounding.top <= (window.innerHeight || document.documentElement.clientHeight);\n  };\n\n  function line(diff, n, hue) {\n\n    var p = Math.random() * 100\n\n    for (let y = 0; y < numOfLines; y++) {\n\n      // yDiv will be a value between 0 and 1 (from first row to last)\n      var yDiv = y / numOfLines;\n\n      // Math.sin((Math.PI / 180) * degrees) => 0,0 90,1 180,0 270,-1, 360,0\n      // so we get a value which fluctuates between 1 and -1\n\n      var firstYShift = Math.sin(yDiv * Math.PI * 6) * (Math.sin(diff * n * 2) * 31);\n      var secondYShift = Math.sin(yDiv * Math.PI * 5) * (Math.sin(diff * n * 4) * 37);\n      var thirdYShift = Math.sin(yDiv * Math.PI * 4) * (Math.sin(diff * n * 6) * 43);\n      var firstXShift = Math.sin(yDiv * Math.PI * 3) * (Math.sin(diff * n * 8) * 77);\n      var secondXShift = Math.sin(yDiv * Math.PI * 2) * (Math.sin(diff * n * 10) * 91);\n      var thirdXShift = Math.sin(yDiv * Math.PI) * (Math.sin(diff * n * 12) * 101);\n\n      ctx.strokeStyle = 'hsla(' + hue + ', 100%, 50%, 0.4)';\n      ctx.beginPath();\n      ctx.moveTo(startOffset, y * spacing + startOffset);\n      ctx.lineTo(startOffset + quarter + firstXShift, y * spacing + startOffset + firstYShift);\n      ctx.lineTo(startOffset + quarter * 2 + secondXShift, y * spacing + startOffset + secondYShift);\n      ctx.lineTo(startOffset + quarter * 3 + thirdXShift, y * spacing + startOffset + thirdYShift);\n      ctx.lineTo(canvas.width - startOffset, y * spacing + startOffset);\n      ctx.stroke();\n    }\n  }\n\n  var counter = 0;\n  var hue1 = 0;\n  var hue2 = 0;\n\n  function step() {\n    if (!animate) return;\n    if (!isInViewport(canvas)) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    counter++;\n\n    line(counter, 0.001, hue1);\n\n    line(counter * 2, 0.0001, hue2);\n\n    hue1 += 1;\n    hue2 += 0.1;\n\n    window.requestAnimationFrame(step);\n  }\n\n  window.requestAnimationFrame(step);\n};\n\nwindow.addEventListener('resize', function () {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  stop();\n  start();\n});\n\nstart();"]}